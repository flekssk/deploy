{% extends '@!EasyAdmin/default/layout.html.twig' %}

{% block header %}
    <nav class="navbar" role="navigation">
        <button id="navigation-toggler" type="button" aria-label="Toggle navigation">
            <i class="fa fa-fw fa-bars"></i>
        </button>

        <div id="header-logo">
            {% block header_logo %}
                <a class="logo {{ easyadmin_config('site_name')|length > 14 ? 'logo-long' }}" title="{{ easyadmin_config('site_name')|striptags }}" href="{{ path('easyadmin') }}">
                    {{ easyadmin_config('site_name')|raw }}
                </a>
            {% endblock header_logo %}
        </div>
    </nav>

    {% set _user_name = easyadmin_read_property(app.user, easyadmin_config('user.name_property_path'))|default('user.unnamed'|trans(domain = 'EasyAdminBundle')) %}
    {% set _logout_path = easyadmin_logout_path() %}
    {% set _user_has_logout = _logout_path is not empty %}
    {% set _user_is_impersonated = is_granted('ROLE_PREVIOUS_ADMIN') %}
    {% set _user_menu_content %}
        <div class="popover-content-section user-details {{ _user_has_logout or _user_is_impersonated ? 'user-has-actions' }}">
            <p class="small text-muted mb-0">{{ 'user.logged_in_as'|trans(domain = 'EasyAdminBundle') }}</p>
            <p class="user-details-name">
                {% if app.user|default(false) == false %}
                    {{ 'user.anonymous'|trans(domain = 'EasyAdminBundle') }}
                {% else %}
                    {{ _user_name }}
                {% endif %}
            </p>
        </div>

        {% block user_menu %}
            {% if _user_has_logout or _user_is_impersonated %}
                <div class="popover-content-section user-menu">
                    {% if _user_has_logout %}
                        <a class="user-action user-action-logout" href="{{ _logout_path }}">{{ 'user.signout'|trans(domain = 'EasyAdminBundle') }}</a>
                    {% endif %}
                    {% if _user_is_impersonated %}
                        <a class="user-action user-action-exit-impersonation" href="?_switch_user=_exit">{{ 'user.exit_impersonation'|trans(domain = 'EasyAdminBundle') }}</a>
                    {% endif %}
                </div>
            {% endif %}
        {% endblock user_menu %}
    {% endset %}

    <div class="d-flex justify-content-end">
        <div class="navbar-custom-menu">
            <div class="user user-menu-wrapper {{ _user_is_impersonated ? 'user-is-impersonated' }}" data-toggle="popover" data-placement="bottom" data-container=".user-menu-wrapper" data-content="{{ _user_menu_content|e('html_attr') }}" data-html="true">
                {% if easyadmin_config('user.display_avatar') %}
                    {% set _avatar_image_path = easyadmin_read_property(app.user, easyadmin_config('user.avatar_property_path')) %}
                    {% if null == _avatar_image_path %}
                        <i class="fa fa-fw {{ app.user is not null ? 'fa-user-circle' : 'fa-user-times' }} user-avatar"></i>
                    {% else %}
                        <img class="user-avatar" src="{{ _avatar_image_path }}" />
                    {% endif %}
                {% endif %}
                {% if easyadmin_config('user.display_name') %}
                    <span class="user-name">{{ _user_name }}</span>
                {% endif %}
            </div>
        </div>
    </div>
    {% block custom_script %}
        <script>
            (function() {
                var jsPublishGroupSelect = '.js-publish-group-select';

                var publishGroup = 'publishGroup';
                var message = 'Интерфейс будет обновлен, продолжить?';

                function _isPublishGroup(str) {
                    if (str.search(new RegExp(publishGroup)) >= 0) {
                        return true;
                    }
                    return false;
                }

                function _preprocessUri(id) {
                    var _search = decodeURIComponent(window.location.search);
                    var _searchByArray = _search.split('&');

                    if (_isPublishGroup(_search)) {
                        _searchByArray.forEach(function (item, idx) {
                            if (_isPublishGroup(item)) {
                                _searchByArray[idx] = publishGroup + '=' + id;
                            }
                        });
                    } else {
                        _searchByArray.push(publishGroup + '=' + id);
                    }

                    return window.location.origin
                        + window.location.pathname
                        + _searchByArray.join('&');
                }

                $(jsPublishGroupSelect).on('change', function(self) {
                    var _id = $(self.target).val();


                    if (confirm(message)) {
                        window.location = _preprocessUri(_id);
                    }
                });
            })();
        </script>
    {% endblock custom_script %}
{% endblock header %}
